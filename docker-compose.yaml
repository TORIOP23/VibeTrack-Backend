services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_CLOUD_GATEWAY_ROUTES_0_ID_URI: http://identity:9001
    depends_on:
      identity:
        condition: service_healthy

  identity:
    build:
      context: ./identity
      dockerfile: Dockerfile
    ports:
      - "9001:9001"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/identity
      SPRING_DATASOURCE_USERNAME: identity
      SPRING_DATASOURCE_PASSWORD: password
    healthcheck:
      test: "wget -T5 -qO- localhost:9001/identity/actuator/health | grep UP || exit 1"
      retries: 5
      start_interval: 5s
      start_period: 30s
      timeout: 10s
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/db_schema.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

networks:
  vibetrack:
    name: ${NETWORK_NAME}
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: